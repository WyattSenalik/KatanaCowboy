# https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options
[root = true]

[*.cs]
indent_size = 4
indent_style = space
trim_trailing_whitespace = true

dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

dotnet_style_require_accessibility_modifiers = never:warning
dotnet_style_readonly_field = false
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = false:suggestion
# dotnet_style_prefer_auto_properties = true:suggestion

dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# Not possible because of Unity's stupid null-hack for GameObjects.
# dotnet_style_coalesce_expression = true:suggestion
# dotnet_style_null_propagation = true:suggestion

csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

csharp_prefer_braces = false:warning

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = false
csharp_space_between_method_declaration_parameter_list_parentheses = true
csharp_space_between_method_call_parameter_list_parentheses = true
csharp_space_between_parentheses = control_flow_statements,expressions,type_casts
csharp_space_between_square_brackets = true
csharp_space_between_empty_square_brackets = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

### Naming Conventions

## Naming Rules


# Private/protected fields:
dotnet_naming_symbols.private_protected_fields.applicable_accessibilities = private,protected,protected_internal
dotnet_naming_symbols.private_protected_fields.applicable_kinds = field,property,event

# Public/internal fields:
dotnet_naming_symbols.public_internal_fields.applicable_accessibilities = public,internal
dotnet_naming_symbols.public_internal_fields.applicable_kinds = field,property,event

# Interface
dotnet_naming_symbols.interfaces.applicable_kinds = interface

# Parameters and locals
dotnet_naming_symbols.parameters_and_locals.applicable_kinds = parameter,local

# Default:
dotnet_naming_symbols.default.applicable_kinds = *

## Naming Styles

# camel_case - camelCase style
dotnet_naming_style.camel_case.capitalization = camel_case

# pascal_case - PascalCase style
dotnet_naming_style.pascal_case.capitalization = pascal_case

# private_protected_fields - Non-public fields: _camelCase
dotnet_naming_style.private_protected_fields_style.capitalization = camel_case
dotnet_naming_style.private_protected_fields_style.required_prefix = _

# public_internal_field - Non-public fields: _camelCase
dotnet_naming_style.public_internal_fields_style.capitalization = camel_case

# interface_prefix - Prefix interfaces with 'I'
dotnet_naming_style.interfaces_style.capitalization = pascal_case
dotnet_naming_style.interfaces_style.required_prefix = I

## Naming Rules

# Private/protected fields.
dotnet_naming_rule.non_public_fields.severity = warning
dotnet_naming_rule.non_public_fields.symbols = private_protected_fields
dotnet_naming_rule.non_public_fields.style = private_protected_fields_style

# Private/protected fields.
dotnet_naming_rule.public_internal_fields.severity = warning
dotnet_naming_rule.public_internal_fields.symbols = public_internal_fields
dotnet_naming_rule.public_internal_fields.style = public_internal_fields_style

# Interfaces
dotnet_naming_rule.interface_prefix.severity = warning
dotnet_naming_rule.interface_prefix.symbols = interfaces
dotnet_naming_rule.interface_prefix.style = interfaces_style

# Parameters and locals
dotnet_naming_rule.parameters_and_locals.severity = warning
dotnet_naming_rule.parameters_and_locals.symbols = parameters_and_locals
dotnet_naming_rule.parameters_and_locals.style = camel_case

# Remaining default to PascalCase
dotnet_naming_rule.default_to_pascal_case.severity = warning
dotnet_naming_rule.default_to_pascal_case.symbols = default
dotnet_naming_rule.default_to_pascal_case.style = pascal_case
